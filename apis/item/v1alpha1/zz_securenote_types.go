// SPDX-FileCopyrightText: 2023 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type SecureNoteAttachmentsInitParameters struct {
}

type SecureNoteAttachmentsObservation struct {

	// (String)
	FileName *string `json:"fileName,omitempty" tf:"file_name,omitempty"`

	// (String) Identifier.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// (String)
	Size *string `json:"size,omitempty" tf:"size,omitempty"`

	// (String)
	SizeName *string `json:"sizeName,omitempty" tf:"size_name,omitempty"`

	// (String)
	URL *string `json:"url,omitempty" tf:"url,omitempty"`
}

type SecureNoteAttachmentsParameters struct {
}

type SecureNoteFieldInitParameters struct {

	// (Boolean) Value of a boolean field.
	// Value of a boolean field.
	Boolean *bool `json:"boolean,omitempty" tf:"boolean,omitempty"`

	// (String) Value of a hidden text field.
	// Value of a hidden text field.
	Hidden *string `json:"hidden,omitempty" tf:"hidden,omitempty"`

	// (String) Value of a linked field.
	// Value of a linked field.
	Linked *string `json:"linked,omitempty" tf:"linked,omitempty"`

	// (String) Name.
	// Name of the field.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String) Value of a text field.
	// Value of a text field.
	Text *string `json:"text,omitempty" tf:"text,omitempty"`
}

type SecureNoteFieldObservation struct {

	// (Boolean) Value of a boolean field.
	// Value of a boolean field.
	Boolean *bool `json:"boolean,omitempty" tf:"boolean,omitempty"`

	// (String) Value of a hidden text field.
	// Value of a hidden text field.
	Hidden *string `json:"hidden,omitempty" tf:"hidden,omitempty"`

	// (String) Value of a linked field.
	// Value of a linked field.
	Linked *string `json:"linked,omitempty" tf:"linked,omitempty"`

	// (String) Name.
	// Name of the field.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String) Value of a text field.
	// Value of a text field.
	Text *string `json:"text,omitempty" tf:"text,omitempty"`
}

type SecureNoteFieldParameters struct {

	// (Boolean) Value of a boolean field.
	// Value of a boolean field.
	// +kubebuilder:validation:Optional
	Boolean *bool `json:"boolean,omitempty" tf:"boolean,omitempty"`

	// (String) Value of a hidden text field.
	// Value of a hidden text field.
	// +kubebuilder:validation:Optional
	Hidden *string `json:"hidden,omitempty" tf:"hidden,omitempty"`

	// (String) Value of a linked field.
	// Value of a linked field.
	// +kubebuilder:validation:Optional
	Linked *string `json:"linked,omitempty" tf:"linked,omitempty"`

	// (String) Name.
	// Name of the field.
	// +kubebuilder:validation:Optional
	Name *string `json:"name" tf:"name,omitempty"`

	// (String) Value of a text field.
	// Value of a text field.
	// +kubebuilder:validation:Optional
	Text *string `json:"text,omitempty" tf:"text,omitempty"`
}

type SecureNoteInitParameters struct {

	// (List of String) Identifier of the collections the item belongs to.
	// Identifier of the collections the item belongs to.
	CollectionIds []*string `json:"collectionIds,omitempty" tf:"collection_ids,omitempty"`

	// (Boolean) Mark as a Favorite to have item appear at the top of your Vault in the UI.
	// Mark as a Favorite to have item appear at the top of your Vault in the UI.
	Favorite *bool `json:"favorite,omitempty" tf:"favorite,omitempty"`

	// (Block List) Extra fields. (see below for nested schema)
	// Extra fields.
	Field []SecureNoteFieldInitParameters `json:"field,omitempty" tf:"field,omitempty"`

	// (String) Identifier of the folder.
	// Identifier of the folder.
	FolderID *string `json:"folderId,omitempty" tf:"folder_id,omitempty"`

	// (String) Name.
	// Name.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String) Identifier of the organization.
	// Identifier of the organization.
	OrganizationID *string `json:"organizationId,omitempty" tf:"organization_id,omitempty"`

	// prompt” when displaying secret in the UI.
	// Require master password “re-prompt” when displaying secret in the UI.
	Reprompt *bool `json:"reprompt,omitempty" tf:"reprompt,omitempty"`
}

type SecureNoteObservation struct {

	// (List of Object) List of item attachments. (see below for nested schema)
	// List of item attachments.
	Attachments []SecureNoteAttachmentsObservation `json:"attachments,omitempty" tf:"attachments,omitempty"`

	// (List of String) Identifier of the collections the item belongs to.
	// Identifier of the collections the item belongs to.
	CollectionIds []*string `json:"collectionIds,omitempty" tf:"collection_ids,omitempty"`

	// (String) Date the item was created.
	// Date the item was created.
	CreationDate *string `json:"creationDate,omitempty" tf:"creation_date,omitempty"`

	// (String) Date the item was deleted.
	// Date the item was deleted.
	DeletedDate *string `json:"deletedDate,omitempty" tf:"deleted_date,omitempty"`

	// (Boolean) Mark as a Favorite to have item appear at the top of your Vault in the UI.
	// Mark as a Favorite to have item appear at the top of your Vault in the UI.
	Favorite *bool `json:"favorite,omitempty" tf:"favorite,omitempty"`

	// (Block List) Extra fields. (see below for nested schema)
	// Extra fields.
	Field []SecureNoteFieldObservation `json:"field,omitempty" tf:"field,omitempty"`

	// (String) Identifier of the folder.
	// Identifier of the folder.
	FolderID *string `json:"folderId,omitempty" tf:"folder_id,omitempty"`

	// (String) Identifier.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// (String) Name.
	// Name.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// INTERNAL USE
	Object *string `json:"object,omitempty" tf:"object,omitempty"`

	// (String) Identifier of the organization.
	// Identifier of the organization.
	OrganizationID *string `json:"organizationId,omitempty" tf:"organization_id,omitempty"`

	// prompt” when displaying secret in the UI.
	// Require master password “re-prompt” when displaying secret in the UI.
	Reprompt *bool `json:"reprompt,omitempty" tf:"reprompt,omitempty"`

	// (String) Last time the item was updated.
	// Last time the item was updated.
	RevisionDate *string `json:"revisionDate,omitempty" tf:"revision_date,omitempty"`

	// INTERNAL USE
	Type *float64 `json:"type,omitempty" tf:"type,omitempty"`
}

type SecureNoteParameters struct {

	// (List of String) Identifier of the collections the item belongs to.
	// Identifier of the collections the item belongs to.
	// +kubebuilder:validation:Optional
	CollectionIds []*string `json:"collectionIds,omitempty" tf:"collection_ids,omitempty"`

	// (Boolean) Mark as a Favorite to have item appear at the top of your Vault in the UI.
	// Mark as a Favorite to have item appear at the top of your Vault in the UI.
	// +kubebuilder:validation:Optional
	Favorite *bool `json:"favorite,omitempty" tf:"favorite,omitempty"`

	// (Block List) Extra fields. (see below for nested schema)
	// Extra fields.
	// +kubebuilder:validation:Optional
	Field []SecureNoteFieldParameters `json:"field,omitempty" tf:"field,omitempty"`

	// (String) Identifier of the folder.
	// Identifier of the folder.
	// +kubebuilder:validation:Optional
	FolderID *string `json:"folderId,omitempty" tf:"folder_id,omitempty"`

	// (String) Name.
	// Name.
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String, Sensitive) Notes.
	// Notes.
	// +kubebuilder:validation:Optional
	NotesSecretRef *v1.SecretKeySelector `json:"notesSecretRef,omitempty" tf:"-"`

	// (String) Identifier of the organization.
	// Identifier of the organization.
	// +kubebuilder:validation:Optional
	OrganizationID *string `json:"organizationId,omitempty" tf:"organization_id,omitempty"`

	// prompt” when displaying secret in the UI.
	// Require master password “re-prompt” when displaying secret in the UI.
	// +kubebuilder:validation:Optional
	Reprompt *bool `json:"reprompt,omitempty" tf:"reprompt,omitempty"`
}

// SecureNoteSpec defines the desired state of SecureNote
type SecureNoteSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     SecureNoteParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider SecureNoteInitParameters `json:"initProvider,omitempty"`
}

// SecureNoteStatus defines the observed state of SecureNote.
type SecureNoteStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        SecureNoteObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// SecureNote is the Schema for the SecureNotes API. Manages a Vault Secure Note item.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,bitwarden}
type SecureNote struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) && has(self.initProvider.name))",message="spec.forProvider.name is a required parameter"
	Spec   SecureNoteSpec   `json:"spec"`
	Status SecureNoteStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// SecureNoteList contains a list of SecureNotes
type SecureNoteList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []SecureNote `json:"items"`
}

// Repository type metadata.
var (
	SecureNote_Kind             = "SecureNote"
	SecureNote_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: SecureNote_Kind}.String()
	SecureNote_KindAPIVersion   = SecureNote_Kind + "." + CRDGroupVersion.String()
	SecureNote_GroupVersionKind = CRDGroupVersion.WithKind(SecureNote_Kind)
)

func init() {
	SchemeBuilder.Register(&SecureNote{}, &SecureNoteList{})
}
